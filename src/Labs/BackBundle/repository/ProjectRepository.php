<?php

namespace Labs\BackBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\Expr;

/**
 * DossierRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjectRepository extends EntityRepository
{
    public function getOne($id)
    {
        $qb = $this->createQueryBuilder('p');
        $qb->where($qb->expr()->eq('p.id', ':id'));
        $qb->setParameter(':id', $id);
        return $qb->getQuery()->getOneOrNullResult();
    }

    public function getOneAndAssociation($id)
    {
        $qb = $this->createQueryBuilder('p');
        $qb->leftJoin('p.medias','m');
        $qb->addSelect('m');
        $qb->where($qb->expr()->eq('p.id', ':id'));
        $qb->setParameter(':id', $id);
        return $qb->getQuery()->getOneOrNullResult();
    }

    public function findProjectLimit($num = null)
    {
        $qb = $this->createQueryBuilder('p');
        $qb->leftJoin('p.medias','m');
        $qb->addSelect('m');
        $qb->where(
            $qb->expr()->eq('p.online', 1),
            $qb->expr()->eq('m.actived', 1)
        );
        $qb->orderBy('p.created', 'DESC');
        if( null !== $num ){
            $qb->setMaxResults($num);
        }
        return $qb->getQuery()->getResult();
    }

    /**
     * @return mixed
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function getDraft()
    {
        $qb = $this->createQueryBuilder('p');
        $qb->where(
            $qb->expr()->eq('p.draft', 0)
        );
        return $qb->getQuery()->getOneOrNullResult();
    }

    /**
     * @return array
     */
    public function findAllProjectWithMediasActived()
    {
        $qb = $this->createQueryBuilder('p');
        $qb->leftJoin('p.medias','m');
        $qb->addSelect('m');
        $qb->where(
            $qb->expr()->eq('p.online', 1),
            $qb->expr()->eq('m.actived', 1)
        );
        return $qb->getQuery()->getResult();
    }
}
